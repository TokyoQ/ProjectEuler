import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.FileReader;

/*
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * 
 * Triangle	 	    T_n=n(n+1)/2	 	1, 3, 6, 10, 15, ...
 * Pentagonal	 	P_n=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
 * Hexagonal	 	H_n=n(2n−1)	    	1, 6, 15, 28, 45, ...
 * 
 * It can be verified that T_285 = P_165 = H_143 = 40755.
 * 
 * Find the next triangle number that is also pentagonal and hexagonal.
 * 
 */

public class Driver {

	public static void main(String[] args) throws Exception {
		
		//Generate numbers
		ArrayList<Long> pentagons = getPentagons(100000);
		ArrayList<Long> hexagons = getHexagons(100000);
		long maxPentagon = pentagons.get(pentagons.size()-1);
		long maxHexagon = hexagons.get(hexagons.size()-1);
		
		for(long i = 1; i < 100000; i++) {
			long triangle = i*(i+1)/2;
			
			if(triangle > maxPentagon)
				System.out.println("Need more pentagons!");
			if(triangle > maxHexagon)
				System.out.println("Need more hexagons!");
			
			if(pentagons.contains(triangle) && hexagons.contains(triangle)) {
				if(i > 285) {
					System.out.println(i + "th triangle number: " + triangle);
					break;
				}
			}
		}
	}
	
	//Returns a set containing the first n triangle numbers
	private static ArrayList<Long> getPentagons(int n) {
		
		ArrayList<Long> pentagonals = new ArrayList<Long>();
		for(long i = 1; i <= n; i++) {
			pentagonals.add(i*(3*i-1)/2);
		}
		return pentagonals;
		
	}
	
	//Returns a set containing the first n triangle numbers
	private static ArrayList<Long> getHexagons(int n) {
		
		ArrayList<Long> hexagons = new ArrayList<Long>();
		for(long i = 1; i <= n; i++) {
			hexagons.add(i*(2*i-1));
		}
		return hexagons;
	}
	
}